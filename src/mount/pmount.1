.TH pmount 1
'''
.SH NAME
\fBpmount\fR \- mount or claim a block device
'''
.SH SYNOPSIS
.IP "\fBpmount\fR" 4
List available device.
.IP "\fBpmount\fR \fIsdb1\fR" 4
Mount /dev/\fIsdb1\fR to /mnt/\fIsdb1\fR.
.IP "\fBpmount\fR \fB-u\fR \fIsdb1\fR" 4
Un-mount /mnt/\fIsdb1\fR.
.IP "\fBpmount\fR \fB-f\fR \fIfile\fR" 4
Mount \fIfile\fR via a loop device to /mnt/loop\fIN\fR.
.IP "\fBpmount\fR \fB-g\fR \fIsdb\fR" 4
Grab \fIsdb\fR temporarily for current user.
.IP "\fBpmount\fR \fB-r\fR \fIsdb\fR" 4
Release \fIsdb\fR.
'''
.SH DESCRIPTION
This tool allows a non-privileged user to mount and format block devices.
Restrictions apply; generally the user should only expect to be able to claim
removable block devices like USB flash drives and MMC cards.
'''
File system on the device is auto-detected. The user is not allowed to supply
any mount options at this moment either.
'''
.SH USAGE
To work with files on removable drives, run \fBpmount\fR to locate the device,
mount it, and umount when done.
.P
To format or re-partition a drive, grab it with \fBpmount -g\fR and use
whatever tools applicable on /dev/\fIdevice\fR. Release the device when done.
'''
.SH FILES
.IP "/run/ctrl/mount" 4
\fBmountd\fR control socket.
.IP "/dev" 4
Block device location.
.IP "/mnt" 4
Base directory for mount points.
'''
.SH NOTES
\fBpmount\fR itself is merely a client for \fBmountd\fR(8). It does not do
mounting on its own, it only sends commands to \fBmountd\fR.
.P
Due to limitations of the underlying kernel code, the user who requested the
mount may not be able to write to the mounted filesystem, not even with full
write access to the underlying storage. There is no workaround at this point.
The only exception is \fBvfat\fR, which gets mounted with all files owned by
the user who ran \fBpmount\fR.
'''
.SH SEE ALSO
\fBmount\fR(2), \fBmountd\fR(8), \fBmount\fR(8).
