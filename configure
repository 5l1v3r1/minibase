#!/bin/sh

arch=
cross=

unset cc ar strip tp

bindir=/bin
sbindir=/sbin
mandir=/usr/share/man
man1dir=$mandir/man1
man8dir=$mandir/man8
cflags=-Os

die() { echo "$@" >&2; exit 1; }

for arg in "$@"; do
	case "$arg" in
		*dir=*) eval "$arg" ;;
		cross=*) eval "$arg" ;;
		x86_64|arm|arm64|riscv) arch=$arg ;;
		cc=*) eval "$arg" ;;
		ar=*) eval "$arg" ;;
		strip=*) eval "$arg" ;;
		clang) clang=yes ;;
		devel) cflags="-Wall -g -DDEVEL" ;;
		debug) cflags="-Os -g" ;;
		*) die "Unexpected argument $arg" ;;
	esac
done

test -z "$ar" && ar="${cross:+$cross-}ar"
test -z "$strip" && strip="${cross:+$cross-}strip"

if [ -n "$clang" -a -z "$cc" ]; then
	cc="clang${cross:+--target=$cross}"
elif [ -z "$cc" ]; then
	cc="${cross:+$cross-}gcc"
fi

if [ -z "$arch" ]; then
	mach=`$cc -dumpmachine`
	arch=${mach%%-*}
	case "$arch" in
		aarch64) arch=arm64 ;;
		riscv64) arch=riscv ;;
		riscv32) die "RV32 is not supported" ;;
	esac
	test -n "$arch" || die "Cannot determine target arch"
	test -d "lib/arch/$arch" || die "Unsupported arch $arch"
fi

cat > config.mk <<END
ARCH = $arch

CC = \$/mini-cc
AR = $ar
LD = \$(CC)
AS = \$(CC)
STRIP = $strip

bindir = $bindir
sbindir = $sbindir
man1dir = $man1dir
man8dir = $man8dir
END

cat > mini-cc <<END
#!/bin/sh

case "\$0" in
	*/*) base=\${0%/*} ;;
	*) echo "\$0 may not be called from PATH" >&2; exit 1 ;;
esac

needslib=yes

for _ in "\$@"; do
	case "\$_" in
		-c|-E|-S) unset needslib ;;
	esac
done

END

if [ -n "$clang" ]; then
cat >> mini-cc <<END
exec $cc -fno-strict-aliasing -fno-asynchronous-unwind-tables \\
	-Wno-unused-command-line-argument -Wno-gnu -ffreestanding \\
	-nostdinc -I\$base/lib/arch/$arch -I\$base/lib \\
	-nopie -fno-vectorize -fno-stack-protector $cflags "\$@" \\
	-nostdlib \${needslib:+\$base/lib/all.a}
END
else
cat >> mini-cc <<END
exec $cc -fno-strict-aliasing -fno-asynchronous-unwind-tables \\
	-ffreestanding -nostdinc -I\$base/lib/arch/$arch -I\$base/lib \\
	-no-pie -fno-stack-protector $cflags "\$@" \\
	-nostdlib -Wl,-\\( \${needslib:+\$base/lib/all.a -lgcc} -Wl,-\\)
END
fi

chmod a+x mini-cc
